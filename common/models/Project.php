<?php

namespace common\models;

use Yii;
use cornernote\linkall\LinkAllBehavior;
use yii\db\ActiveRecord;

/**
 * This is the model class for table "project".
 *
 * @property integer $id
 * @property integer $user_id
 * @property string $project_name
 * @property string $job_type
 * @property string $project_summary
 * @property string $project_photo
 * @property string $responsibilities
 * @property string $salary_range
 * @property string $is_active
 * @property string $created_at
 *
 * @property Comment[] $comments
 * @property User $user
 * @property TagSet[] $tagSets
 */
class Project extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public $imageFile;
    public $tag_ids;
    public static function tableName()
    {
        return 'project';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id', 'project_name', 'job_type', 'project_summary', 'responsibilities', 'salary_range'], 'required'],
            [['user_id'], 'integer'],
            [['tag_ids'], 'required'],
            [['created_at'], 'safe'],
            [['project_name'], 'string', 'max' => 50],
            [['job_type'], 'string', 'max' => 20],
            [['project_summary', 'responsibilities'], 'string', 'max' => 500],
            [['project_photo'], 'string', 'max' => 200],
            [['imageFile'], 'file'], //'skipOnEmpty' => false, 'extensions' => 'png, jpg'],
            [['salary_range'], 'string', 'max' => 100],
            [['is_active'], 'string', 'max' => 1],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'tag_ids' => 'Category',
            'user_id' => 'User ID',
            'user.username' => 'Created by',
            'project_name' => 'Project Name',
            'job_type' => 'Job Type',
            'project_summary' => 'Project Summary',
            'project_photo' => 'Project Photo',
            'imageFile' => 'Project Photo',
            'responsibilities' => 'Responsibilities',
            'salary_range' => 'Salary Range',
            'is_active' => 'Is Active',
            'created_at' => 'Created At',
        ];
    }

    public function behaviors()
    {
        //return parent::behaviors(); // TODO: Change the autogenerated stub
        return [
            LinkAllBehavior::className(),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getComments()
    {
        return $this->hasMany(Comment::className(), ['project_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */

    public function afterSave($insert, $changedAttributes)
    {
        $tags = [];
        foreach ($this->tag_ids as $tag_name) {
            $tag = Tag::getTagByName($tag_name);
            if ($tag) {
                $tags[] = $tag;
            }
        }
        $this->linkAll('tags', $tags);
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public function beforeDelete()
    {
        foreach((array)$this->tag_ids as $c){
            $c->delete();
        }

        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function getTagSets()
    {
        return $this->hasMany(TagSet::className(), ['project_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getApplyActivities()
    {
        return $this->hasMany(ApplyActivity::className(), ['project_id' => 'id']);
    }

    public function getTags(){
        return $this->hasMany(Tag::className(), ['id' => 'tag_id'])
            ->viaTable('tag_set', ['project_id' => 'id']);

    }
}
